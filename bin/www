#!/usr/bin/env node

/**
 * Module dependencies.
 */

const http = require('http');
const logger = require('../utils/logger');
const { buildNumber } = require('../build-info');

logger.info('----- JWT Server -----');
logger.info(buildNumber);

const app = require('../app');
const { PORT } = require('../config');

/**
 * Get port from environment and store in Express.
 */

const port = process.env.PORT || PORT;
app.set('port', port);

/**
 * Create HTTP server.
 */

const server = http.createServer(app);

/**
 * Listen on provided port, on all network interfaces.
 */

server.listen(port);

server.on('error', (error) => {
  if (error.syscall !== 'listen') {
    throw error;
  }

  const bind = typeof port === 'string'
    ? `Pipe ${port}`
    : `Port ${port}`;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      logger.error(`${bind} requires elevated privileges`);
      process.exit(1);
      break;
    case 'EADDRINUSE':
      logger.error(`${bind} is already in use`);
      process.exit(1);
      break;
    default:
      throw error;
  }
});

server.on('listening', () => {
  logger.info(`Service listening on port ${port}`);
});
